<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>School Dijkstra Map</title>
    <style>
        svg {
            border: 1px solid #ccc;
            width: 100%;
            height: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid #000;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .node {
            fill: #66b3ff;
            stroke: #333;
            stroke-width: 1.5px;
            cursor: pointer;
        }

        .node:hover {
            fill: #ffcc00;
        }

        .link {
            stroke: #999;
            stroke-width: 2px;
        }

        text {
            font-family: sans-serif;
            font-size: 12px;
            text-anchor: middle;
            fill: #333;
        }

        .distance-label {
            fill: #555;
            font-size: 10px;
        }

        .accordion {
            background-color: #eee;
            color: #444;
            cursor: pointer;
            padding: 10px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            transition: background-color 0.2s ease;
        }

        .accordion:hover {
            background-color: #ccc;
        }

        .panel {
            display: none;
            padding: 10px;
            background-color: #f9f9f9;
            border-top: 1px solid #ccc;
        }

        .panel ul {
            list-style-type: disc;
            margin: 10px;
            padding-left: 20px;
        }
    </style>
</head>
<body>
    <h1>Sub-Task: School</h1>
    <h2>SDG Goals, Targets, and Indicators</h2>
    <ul>
        <li><strong>SDG Goal:</strong> 11 (Sustainable Cities and Communities)</li>
        <li><strong>Target:</strong> 11.2 (Provide access to safe, affordable, accessible, and sustainable transport systems)</li>
        <li><strong>Target:</strong> 11.3 (Enhance inclusive and sustainable urbanization)</li>
        <li><strong>Indicators:</strong> 11.2.1, 11.3.2</li>
    </ul>

    <h2>Description</h2>
    <p>The school should be built near residential areas to facilitate access for children. Contracts for infrastructure (classrooms, laboratories, library) should be arranged. Allocation of teachers, administrative staff, and support staff must be prioritized for smooth functioning.</p>

    <h2>School Sections</h2>
    <table>
        <thead>
            <tr>
                <th>Sl. No.</th>
                <th>Section</th>
                <th>Number</th>
            </tr>
        </thead>
        <tbody>
            <tr><td>1</td><td>Classrooms</td><td>20</td></tr>
            <tr><td>2</td><td>Computer Lab</td><td>2</td></tr>
            <tr><td>3</td><td>Science Lab</td><td>2</td></tr>
            <tr><td>4</td><td>Library</td><td>1</td></tr>
            <tr><td>5</td><td>Staff Room</td><td>2</td></tr>
            <tr><td>6</td><td>Playground</td><td>1</td></tr>
            <tr><td>7</td><td>Cafeteria</td><td>1</td></tr>
            <tr><td>8</td><td>Administrative Office</td><td>1</td></tr>
            <tr><td>9</td><td>Auditorium</td><td>1</td></tr>
            <tr><td>10</td><td>Medical Room</td><td>1</td></tr>
        </tbody>
    </table>

    <h2>School Dijkstra Map</h2>
    <svg viewBox="0 0 800 600"></svg>

    <button class="accordion">Case 2: School</button>
    <div class="panel">
        <ul>
            <li>Inclusive Access: Ensuring that all students, including those with disabilities, have access to convenient public transport to and from schools.</li>
            <li>Green School Spaces: Designing school campuses with open spaces and recreational areas accessible to all students.</li>
            <li>Safe School Infrastructure: Ensuring school buildings and facilities are resilient to disasters and provide a safe learning environment.</li>
            <li>Education for Sustainable Development: Teaching students about sustainability and the importance of public space in cities.</li>
        </ul>
        <a href="school">Mapping Details</a>
    </div>

    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script>
        const acc = document.querySelectorAll(".accordion");
        acc.forEach((button) => {
            button.addEventListener("click", function () {
                this.classList.toggle("active");
                const panel = this.nextElementSibling;
                if (panel.style.display === "block") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
            });
        });

        const graph = {
            nodes: [
                { id: "Classrooms" },
                { id: "Computer Lab" },
                { id: "Science Lab" },
                { id: "Library" },
                { id: "Staff Room" },
                { id: "Playground" },
                { id: "Cafeteria" },
                { id: "Administrative Office" },
                { id: "Auditorium" },
                { id: "Medical Room" }
            ],
            links: [
                { source: "Classrooms", target: "Computer Lab", distance: 10 },
                { source: "Classrooms", target: "Science Lab", distance: 8 },
                { source: "Computer Lab", target: "Science Lab", distance: 5 },
                { source: "Classrooms", target: "Library", distance: 7 },
                { source: "Library", target: "Staff Room", distance: 12 },
                { source: "Staff Room", target: "Playground", distance: 6 },
                { source: "Playground", target: "Cafeteria", distance: 9 },
                { source: "Cafeteria", target: "Administrative Office", distance: 4 },
                { source: "Administrative Office", target: "Auditorium", distance: 3 },
                { source: "Auditorium", target: "Medical Room", distance: 2 },
                { source: "Medical Room", target: "Classrooms", distance: 5 }
            ]
        };

        const svg = d3.select("svg"),
              width = 800,
              height = 600;

        const simulation = d3.forceSimulation()
            .force("link", d3.forceLink().id((d) => d.id).distance((d) => d.distance * 10))
            .force("charge", d3.forceManyBody().strength(-400))
            .force("center", d3.forceCenter(width / 2, height / 2));

        const link = svg.append("g")
            .selectAll("line")
            .data(graph.links)
            .enter()
            .append("line")
            .attr("class", "link");

        const node = svg.append("g")
            .selectAll("circle")
            .data(graph.nodes)
            .enter()
            .append("circle")
            .attr("class", "node")
            .attr("r", 15)
            .call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));

        const labels = svg.append("g")
            .selectAll("text")
            .data(graph.nodes)
            .enter()
            .append("text")
            .text((d) => d.id)
            .attr("dy", ".35em");

        simulation.nodes(graph.nodes).on("tick", ticked);
        simulation.force("link").links(graph.links);

        function ticked() {
            link
                .attr("x1", (d) => d.source.x)
                .attr("y1", (d) => d.source.y)
                .attr("x2", (d) => d.target.x)
                .attr("y2", (d) => d.target.y);

            node.attr("cx", (d) => d.x).attr("cy", (d) => d.y);

            labels.attr("x", (d) => d.x).attr("y", (d) => d.y);
        }

        function dragstarted(event, d) {
            if (!event.active) simulation.alphaTarget(0.3).restart();
            d.fx = d.x;
            d.fy = d.y;
        }

        function dragged(event, d) {
            d.fx = event.x;
            d.fy = event.y;
        }

        function dragended(event, d) {
            if (!event.active) simulation.alphaTarget(0);
            d.fx = null;
            d.fy = null;
        }
    </script>
</body>
</html>
